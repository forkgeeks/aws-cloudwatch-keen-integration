{
  "name": "cloudwatch-logs-parser",
  "version": "1.0.0",
  "description": "This will parse the cloudwatch logs stream into a json model on which you can done manupulatoin easily",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/forkgeeks/cloudwatch-logs-parser.git"
  },
  "keywords": [
    "cloudwatch",
    "log",
    "parser",
    "stream",
    "parser",
    "export",
    "cloudwatch",
    "logs"
  ],
  "author": {
    "name": "Abdullah Bashir"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/forkgeeks/cloudwatch-logs-parser/issues"
  },
  "homepage": "https://github.com/forkgeeks/cloudwatch-logs-parser#readme",
  "readme": "# Cloudwatch Stream logs parser\nThis will parse the cloudwatch logs stream into a more useful json format.\n\nWhen we enable cloudwatch api logs streaming into lambda function we will get our logs in string format which are not usefull for analysis, this parser will extract useful attributes into proper json object.\n\n\nOriginal received logs from Cloudwatch looks like this:\n\n```json\n{\n  \"logStream\": \"XXXXXXXXXXXXXXXXXXXXXX\",\n  \"messageType\": \"DATA_MESSAGE\",\n  \"logEvents\": [\n    {\n      \"extractedFields\": {\n        \"1\": \"Starting\",\n        \"2\": \"execution\",\n        \"3\": \"for\",\n        \"4\": \"request:\",\n        \"5\": \"XXXXXX-XXX-XXXX6-XXXX-XXXXXXXXX\"\n      },\n      \"timestamp\": 1470111880329,\n      \"message\": \"Starting execution for request: XXXXXX-XXX-XXXX6-XXXX-XXXXXXXXX\",\n      \"id\": \"XXXXXXXXXXXXXXXXX\"\n    },\n    ...\n    ...\n    ...\n    {\n      \"extractedFields\": {\n        \"1\": \"Endpoint\",\n        \"2\": \"request\",\n        \"3\": \"headers:\",\n        \"4\": \"{x-amzn-lambda-integration-tag=XXXXXXXXXXXXXXXXXXX,\",\n        \"5\": \"Authorization=************************************************************************************************************************************************************************************************************************************************************************************************************************98d71c,\",\n        \"6\": \"X-Amz-Date=20160802T042440Z,\",\n        \"7\": \"x-amzn-apigateway-api-id=XXXXXXXXXXXXXXXXXXX,\",\n        \"8\": \"X-Amz-Source-Arn=XXXXXXXXXXXXXXXXXXX,\",\n        \"9\": \"Accept=application/json,\",\n        \"10\": \"User-Agent=XXXXXXXXXXXXXXXXXXX,\",\n        \"11\": \"X-Amz-Security-Token=XXXXXXXXXXXXXXXXXXX\",\n        \"12\": \"TRUNCATED\"\n      },\n      \"timestamp\": 1470111880335,\n      \"message\": \"Endpoint request headers: {x-amzn-lambda-integration-tag=XXXXXXXXXXXXXXXXXXX, Authorization=XXXXXXXXXXXXXXXXXXX, X-Amz-Date=20160802T042440Z, x-amzn-apigateway-api-id=XXXXXXXXXXXXXXXXXXX, X-Amz-Source-Arn=XXXXXXXXXXXXXXXXXXX, Accept=application/json, User-Agent=AmazonAPIGateway_xxxx, X-Amz-Security-Token=XXXXXXXXXXXXXXXXXXX}\",\n      \"id\": \"XXXXXXXXXXXXXXXXXXX\"\n    }\n    ...\n    ...\n    ...\n```  \n\nAfter parsing it will become like this.\n\n```json\n  {\n    \"starting_execution_for_request\": \"079319da-5869-11e6-a27b-1bea4e50c6ac\",\n    ...\n    ...\n    \"method_request_headers\": {\n      \"accept\": \"*/*\",\n      \"cloudfront_viewer_country\": \"CN\",\n      \"cloudfront_forwarded_proto\": \"https\",\n      \"cloudfront_is_tablet_viewer\": \"false\",\n      \"cloudfront_is_mobile_viewer\": \"false\",\n      \"user_agent\": \"python-requests/2.9.1\",\n      \"x_forwarded_proto\": \"https\",\n      \"cloudfront_is_smarttv_viewer\": \"false\",\n      \"host\": \"api.ipstreet.com\",\n      \"accept_encoding\": \"gzip deflate\",\n      \"x_forwarded_port\": \"443\",\n      \"via\": \"1.1 XXXXXX.cloudfront.net (CloudFront)\",\n      \"x_api_key\": \"XXXXXX\",\n      \"x_amz_cf_id\": \"XXXXXXX==\",\n      \"x_forwarded_for\": \"101.150.89.42 54.240.156.158\",\n      \"cloudfront_is_desktop_viewer\": \"true\"\n    },\n    ...\n    ...\n```    \n\n\n## Usage:\n\n```javascript\nnpm install cloudwatch-logs-parser\n```\n\nin your javascript file\n```javascript\nlet parser = require(\"cloudwatch-logs-parser\");\n\nconsole.log(parser(You_aws_log_string));\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "1bf4e0f704005b2e2d9c0d7af4dbe0a8629d61d9",
  "_id": "cloudwatch-logs-parser@1.0.0",
  "_shasum": "ec9fea77d462943ce669738e678df61aafdd09b0",
  "_from": "cloudwatch-logs-parser@latest"
}
